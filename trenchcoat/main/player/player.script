local speed = 150
local num_pads = 3
local INGAME_GUISCRIPT = "game_overlay#gui"

function init(self)
	msg.post(".", "acquire_input_focus")
	self.dir = {}
	reset_dirs(self)
	self.current_anim = nil
	self.correction = vmath.vector3()
	self.busted = false
end

function reset_dirs(self)
	for i=0,(num_pads - 1) do
		self.dir[i] = vmath.vector3()
	end
end

function update(self, dt)
	if self.busted then
		msg.post("#avatar", "play_animation", { id = hash("idle") })
		return
	end

	self.correction = vmath.vector3()
	local p = go.get_position()
	local q = vmath.vector3()

	for i=0,(num_pads - 1) do
		if vmath.length_sqr(self.dir[i]) > 1 then
			self.dir[i] = vmath.normalize(self.dir[i])
		end
		q = q + self.dir[i]
	end
	-- print(p, self.dir[0], self.dir[1], self.dir[2])
	go.set_position(p + q * speed * dt)

	local anim = hash("idle")
	if q.x > 0 then
		anim = hash("right")
	elseif q.x < 0 then
		anim = hash("left")
	elseif q.y > 0 then
		anim = hash("up")
	elseif q.y < 0 then
		anim = hash("down")
	end

	if anim ~= self.current_anim then
		msg.post("#avatar", "play_animation", { id = anim })
		self.current_anim = anim
	end

	reset_dirs(self)
	msg.post(INGAME_GUISCRIPT, "update_player_position", { position = go.get_position() })
end

function on_input(self, action_id, action)
	local i = action.gamepad
	if i == nil then
		i = 0
	end

	if action_id == hash("left") then
		self.dir[i].x = -1
	elseif action_id == hash("right") then
		self.dir[i].x = 1
	elseif action_id == hash("down") then
		self.dir[i].y = -1
	elseif action_id == hash("up") then
		self.dir[i].y = 1
	end
end

function on_message(self, message_id, message, sender)
	if message_id == hash("collision_response") then
		if message.group == hash("agent") and self.busted == false then
			msg.post(INGAME_GUISCRIPT, "game_over")
			self.busted = true
		end
	end

	if message_id == hash("contact_point_response") then
		if message.distance > 0 then
			local proj = vmath.project(self.correction, message.normal * message.distance)
			if proj < 1 then
				local comp = (message.distance - message.distance * proj) * message.normal
				go.set_position(go.get_position() + comp)
				self.correction = self.correction + comp
			end
		end
	end

	if message_id == hash("trigger_response") then
		if message.other_group == hash("door") and message.enter then
			print(message_id, message, sender)
			msg.post(INGAME_GUISCRIPT, "add_score", { amount = 500, position = go.get_position() })
		end
	end
end
