local SPEED = 225

function init(self)
	msg.post(".", "acquire_input_focus")
	self.dir = vmath.vector3()
	self.current_anim = nil
	self.correction = vmath.vector3()
end

function update(self, dt)
	self.correction = vmath.vector3()
	if vmath.length_sqr(self.dir) > 1 then
		self.dir = vmath.normalize(self.dir)
	end
	local p = go.get_position()
	go.set_position(p + self.dir * SPEED * dt)

	local anim = hash("idle")

	if self.dir.x > 0 then
		anim = hash("right")
	elseif self.dir.x < 0 then
		anim = hash("left")
	elseif self.dir.y > 0 then
		anim = hash("up")
	elseif self.dir.y < 0 then
		anim = hash("down")
	end

	if anim ~= self.current_anim then
		msg.post("#avatar", "play_animation", { id = anim })
		self.current_anim = anim
	end

	self.dir = vmath.vector3()
end

function on_input(self, action_id, action)
	--print("gamepad:", action.gamepad)
	if action_id == hash("left") then
		self.dir.x = -1
	elseif action_id == hash("right") then
		self.dir.x = 1
	elseif action_id == hash("down") then
		self.dir.y = -1
	elseif action_id == hash("up") then
		self.dir.y = 1
	end
end

function on_message(self, message_id, message, sender)
	--print( message_id )
	if message_id == hash("collision_response") then
		print("player collision")
		if message.group == "agent" then
			do_gameover(self)
		end
	elseif message_id == hash("contact_point_response") then
		if message.distance > 0 then
			local proj = vmath.project(self.correction, message.normal * message.distance)
			if proj < 1 then
				local comp = (message.distance - message.distance * proj) * message.normal
				go.set_position(go.get_position() + comp)
				self.correction = self.correction + comp
			end
		end
	end
end

function do_gameover(self)
	print("GAME OVER!")
end